'use client';

import { useState } from 'react';

interface IconSelectorProps {
  value: string;
  onChange: (icon: string) => void;
}

const COMMON_ICONS = [
  { emoji: 'üì±', name: 'Mobile Phone' },
  { emoji: 'üíª', name: 'Laptop' },
  { emoji: 'üñ•Ô∏è', name: 'Desktop' },
  { emoji: '‚å®Ô∏è', name: 'Keyboard' },
  { emoji: 'üñ±Ô∏è', name: 'Mouse' },
  { emoji: 'üéß', name: 'Headphones' },
  { emoji: 'üì∑', name: 'Camera' },
  { emoji: 'üéÆ', name: 'Gaming' },
  { emoji: '‚åö', name: 'Watch' },
  { emoji: 'üîã', name: 'Battery' },
  { emoji: 'üëï', name: 'Clothing' },
  { emoji: 'üëî', name: 'Tie' },
  { emoji: 'üëó', name: 'Dress' },
  { emoji: 'üë†', name: 'Heels' },
  { emoji: 'üëü', name: 'Shoes' },
  { emoji: 'üëú', name: 'Bag' },
  { emoji: 'üíÑ', name: 'Makeup' },
  { emoji: 'üíç', name: 'Ring' },
  { emoji: 'üï∂Ô∏è', name: 'Sunglasses' },
  { emoji: 'üéí', name: 'Backpack' },
  { emoji: 'üè†', name: 'Home' },
  { emoji: 'üõãÔ∏è', name: 'Couch' },
  { emoji: 'üõèÔ∏è', name: 'Bed' },
  { emoji: 'ü™ë', name: 'Chair' },
  { emoji: 'üö™', name: 'Door' },
  { emoji: 'ü™ü', name: 'Window' },
  { emoji: 'üí°', name: 'Light' },
  { emoji: 'üïØÔ∏è', name: 'Candle' },
  { emoji: 'üñºÔ∏è', name: 'Frame' },
  { emoji: 'üß∫', name: 'Basket' },
  { emoji: '‚öΩ', name: 'Soccer' },
  { emoji: 'üèÄ', name: 'Basketball' },
  { emoji: 'üèà', name: 'Football' },
  { emoji: '‚öæ', name: 'Baseball' },
  { emoji: 'üéæ', name: 'Tennis' },
  { emoji: 'üèê', name: 'Volleyball' },
  { emoji: 'üèì', name: 'Table Tennis' },
  { emoji: 'üè∏', name: 'Badminton' },
  { emoji: 'ü•ä', name: 'Boxing' },
  { emoji: 'üéØ', name: 'Target' },
  { emoji: 'üìö', name: 'Books' },
  { emoji: '‚úèÔ∏è', name: 'Pencil' },
  { emoji: 'üìù', name: 'Note' },
  { emoji: 'üé®', name: 'Art' },
  { emoji: 'üé≠', name: 'Theater' },
  { emoji: 'üé™', name: 'Circus' },
  { emoji: 'üé¨', name: 'Movie' },
  { emoji: 'üé§', name: 'Microphone' },
  { emoji: 'üé∏', name: 'Guitar' },
  { emoji: 'üéπ', name: 'Piano' },
  { emoji: 'üçî', name: 'Food' },
  { emoji: '‚òï', name: 'Coffee' },
  { emoji: 'üçï', name: 'Pizza' },
  { emoji: 'üç∞', name: 'Cake' },
  { emoji: 'üçé', name: 'Apple' },
  { emoji: 'ü•ó', name: 'Salad' },
  { emoji: 'üçú', name: 'Noodles' },
  { emoji: 'üç™', name: 'Cookie' },
  { emoji: 'üßÉ', name: 'Juice' },
  { emoji: 'üç∑', name: 'Wine' },
  { emoji: 'üöó', name: 'Car' },
  { emoji: 'üö≤', name: 'Bicycle' },
  { emoji: 'üõµ', name: 'Scooter' },
  { emoji: '‚úàÔ∏è', name: 'Airplane' },
  { emoji: 'üö¢', name: 'Ship' },
  { emoji: 'üéÅ', name: 'Gift' },
  { emoji: 'üéà', name: 'Balloon' },
  { emoji: 'üéâ', name: 'Party' },
  { emoji: 'üîß', name: 'Tools' },
  { emoji: 'üî®', name: 'Hammer' },
  { emoji: '‚öôÔ∏è', name: 'Settings' },
  { emoji: 'üîë', name: 'Key' },
  { emoji: 'üß∞', name: 'Toolbox' },
  { emoji: 'üíä', name: 'Medicine' },
  { emoji: 'üíâ', name: 'Syringe' },
  { emoji: 'ü©∫', name: 'Stethoscope' },
  { emoji: 'üå°Ô∏è', name: 'Thermometer' },
  { emoji: 'üß¥', name: 'Lotion' },
  { emoji: 'üßº', name: 'Soap' },
  { emoji: 'üßΩ', name: 'Sponge' },
  { emoji: 'üßπ', name: 'Broom' },
  { emoji: 'üåü', name: 'Star' },
  { emoji: '‚≠ê', name: 'Star Fill' },
  { emoji: 'üéØ', name: 'Target' },
  { emoji: 'üì¶', name: 'Package' },
  { emoji: 'üõí', name: 'Shopping Cart' },
  { emoji: 'üí≥', name: 'Credit Card' },
  { emoji: 'üí∞', name: 'Money' },
  { emoji: 'üè∑Ô∏è', name: 'Tag' },
];

export default function IconSelector({ value, onChange }: IconSelectorProps) {
  const [isOpen, setIsOpen] = useState(false);
  const [search, setSearch] = useState('');

  const filteredIcons = COMMON_ICONS.filter((icon) =>
    icon.name.toLowerCase().includes(search.toLowerCase())
  );

  const handleSelect = (emoji: string) => {
    onChange(emoji);
    setIsOpen(false);
    setSearch('');
  };

  return (
    <div className="relative">
      {/* Selected Icon Display */}
      <div className="flex gap-2">
        <button
          type="button"
          onClick={() => setIsOpen(!isOpen)}
          className="w-16 h-16 border-2 border-gray-300 rounded-lg flex items-center justify-center text-4xl hover:border-primary-600 transition bg-white"
        >
          {value || '‚ùì'}
        </button>
        <div className="flex-1">
          <input
            type="text"
            value={value}
            readOnly
            placeholder="Click to select an icon"
            className="input-field mb-2 cursor-pointer"
            onClick={() => setIsOpen(!isOpen)}
          />
          <button
            type="button"
            onClick={() => setIsOpen(!isOpen)}
            className="btn-outline w-full text-sm py-2"
          >
            {isOpen ? 'Close' : 'Select Icon'}
          </button>
        </div>
      </div>

      {/* Icon Picker Dropdown */}
      {isOpen && (
        <div className="absolute z-50 mt-2 w-full bg-white border-2 border-gray-300 rounded-lg shadow-xl max-h-96 overflow-hidden">
          {/* Search */}
          <div className="p-3 border-b sticky top-0 bg-white">
            <input
              type="text"
              placeholder="Search icons..."
              value={search}
              onChange={(e) => setSearch(e.target.value)}
              className="input-field"
              autoFocus
            />
          </div>

          {/* Icons Grid */}
          <div className="p-3 overflow-y-auto max-h-80">
            {filteredIcons.length > 0 ? (
              <div className="grid grid-cols-6 gap-2">
                {filteredIcons.map((icon) => (
                  <button
                    key={icon.emoji}
                    type="button"
                    onClick={() => handleSelect(icon.emoji)}
                    className={`p-3 text-3xl rounded hover:bg-primary-50 transition border-2 ${
                      value === icon.emoji
                        ? 'border-primary-600 bg-primary-50'
                        : 'border-transparent'
                    }`}
                    title={icon.name}
                  >
                    {icon.emoji}
                  </button>
                ))}
              </div>
            ) : (
              <div className="text-center py-8 text-gray-500">
                No icons found
              </div>
            )}
          </div>
        </div>
      )}
    </div>
  );
}
